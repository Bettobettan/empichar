// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ecf_re_cpp
arma::vec ecf_re_cpp(const arma::mat& t, const arma::mat& smp);
RcppExport SEXP _empichar_ecf_re_cpp(SEXP tSEXP, SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    rcpp_result_gen = Rcpp::wrap(ecf_re_cpp(t, smp));
    return rcpp_result_gen;
END_RCPP
}
// ecf_im_cpp
arma::vec ecf_im_cpp(const arma::mat& t, const arma::mat& smp);
RcppExport SEXP _empichar_ecf_im_cpp(SEXP tSEXP, SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    rcpp_result_gen = Rcpp::wrap(ecf_im_cpp(t, smp));
    return rcpp_result_gen;
END_RCPP
}
// ecf_mod_cpp
arma::vec ecf_mod_cpp(const arma::mat& t, const arma::mat& smp);
RcppExport SEXP _empichar_ecf_mod_cpp(SEXP tSEXP, SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    rcpp_result_gen = Rcpp::wrap(ecf_mod_cpp(t, smp));
    return rcpp_result_gen;
END_RCPP
}
// ecf_cpp
arma::cx_vec ecf_cpp(const arma::mat& t, const arma::mat& smp);
RcppExport SEXP _empichar_ecf_cpp(SEXP tSEXP, SEXP smpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type smp(smpSEXP);
    rcpp_result_gen = Rcpp::wrap(ecf_cpp(t, smp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_empichar_ecf_re_cpp", (DL_FUNC) &_empichar_ecf_re_cpp, 2},
    {"_empichar_ecf_im_cpp", (DL_FUNC) &_empichar_ecf_im_cpp, 2},
    {"_empichar_ecf_mod_cpp", (DL_FUNC) &_empichar_ecf_mod_cpp, 2},
    {"_empichar_ecf_cpp", (DL_FUNC) &_empichar_ecf_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_empichar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
